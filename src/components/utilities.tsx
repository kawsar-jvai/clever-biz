import { useEffect, useState } from "react";

/* Logo Component */
type LogoProps = {
  className?: string; // Optional className for styling wrapper div
};
export const Logo: React.FC<LogoProps> = ({ className }) => (
  <svg
    width="312"
    height="64"
    className={className}
    viewBox="0 0 312 64"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path d="M54.5796 57.0625V11.207H63.6849V57.0625H54.5796Z" fill="#2962FF" />
    <path
      d="M86.3375 57.8055C82.8207 57.8055 79.7566 57.0113 77.1626 55.4404C74.5685 53.8695 72.5664 51.7338 71.1562 49.0686C69.746 46.4034 69.0322 43.4558 69.0322 40.2082C69.0322 36.837 69.7634 33.8541 71.2433 31.2242C72.7231 28.5943 74.7078 26.5292 77.2148 25.0113C79.7218 23.4933 82.5596 22.7344 85.7108 22.7344C88.3396 22.7344 90.6725 23.158 92.6921 23.9875C94.7116 24.8348 96.4178 26.0173 97.8279 27.5353C99.2207 29.0532 100.283 30.8006 101.014 32.795C101.745 34.7895 102.111 36.9429 102.111 39.2904C102.111 39.9434 102.076 40.5965 102.024 41.2319C101.971 41.8673 101.85 42.4145 101.693 42.8557H76.8666V36.078H96.5396L92.222 39.2727C92.6224 37.5077 92.605 35.9368 92.1698 34.5601C91.7171 33.1834 90.9511 32.1067 89.8369 31.2948C88.7226 30.5005 87.3647 30.0946 85.7456 30.0946C84.1613 30.0946 82.8033 30.4829 81.6717 31.2595C80.5401 32.0361 79.687 33.1834 79.1299 34.7013C78.5554 36.2192 78.3464 38.0725 78.4683 40.2435C78.3116 42.1321 78.5205 43.7912 79.1299 45.2209C79.7392 46.6505 80.6619 47.7802 81.9154 48.5744C83.1689 49.3687 84.6836 49.7746 86.4768 49.7746C88.0959 49.7746 89.4887 49.4393 90.6377 48.7862C91.7868 48.1332 92.6921 47.233 93.3362 46.0857L100.614 49.5981C99.9693 51.2396 98.9422 52.6693 97.5494 53.9048C96.1566 55.1403 94.5027 56.0934 92.605 56.7642C90.6725 57.4702 88.6008 57.8055 86.3375 57.8055Z"
      fill="#2962FF"
    />
    <path
      d="M117.22 57.0632L104.163 23.457H113.999L123.052 48.8735H119.292L128.345 23.457H138.181L125.124 57.0632H117.22Z"
      fill="#2962FF"
    />
    <path
      d="M157.543 57.8055C154.026 57.8055 150.962 57.0113 148.368 55.4404C145.774 53.8695 143.771 51.7338 142.361 49.0686C140.951 46.4034 140.237 43.4558 140.237 40.2082C140.237 36.837 140.969 33.8541 142.448 31.2242C143.928 28.5943 145.913 26.5292 148.42 25.0113C150.927 23.4933 153.765 22.7344 156.916 22.7344C159.545 22.7344 161.878 23.158 163.897 23.9875C165.917 24.8348 167.623 26.0173 169.033 27.5353C170.426 29.0532 171.488 30.8006 172.219 32.795C172.95 34.7895 173.316 36.9429 173.316 39.2904C173.316 39.9434 173.281 40.5965 173.229 41.2319C173.177 41.8673 173.055 42.4145 172.898 42.8557H148.072V36.078H167.745L163.427 39.2727C163.828 37.5077 163.81 35.9368 163.375 34.5601C162.922 33.1834 162.156 32.1067 161.042 31.2948C159.928 30.5005 158.57 30.0946 156.951 30.0946C155.366 30.0946 154.008 30.4829 152.877 31.2595C151.745 32.0361 150.892 33.1834 150.335 34.7013C149.76 36.2192 149.552 38.0725 149.673 40.2435C149.517 42.1321 149.726 43.7912 150.335 45.2209C150.944 46.6505 151.867 47.7802 153.121 48.5744C154.374 49.3687 155.889 49.7746 157.682 49.7746C159.301 49.7746 160.694 49.4393 161.843 48.7862C162.992 48.1332 163.897 47.233 164.541 46.0857L171.819 49.5981C171.174 51.2396 170.147 52.6693 168.754 53.9048C167.362 55.1403 165.708 56.0934 163.81 56.7642C161.895 57.4702 159.806 57.8055 157.543 57.8055Z"
      fill="#2962FF"
    />
    <path
      d="M178.659 57.0627V23.4565H187.155V31.5227L186.545 30.3578C187.277 27.5337 188.478 25.6099 190.149 24.6038C191.82 23.5977 193.823 23.1035 196.121 23.1035H198.071V31.0991H195.215C192.987 31.0991 191.194 31.7875 189.818 33.1642C188.443 34.5409 187.747 36.4824 187.747 38.9888V57.0803H178.659V57.0627Z"
      fill="#2962FF"
    />
    <path
      d="M220.686 57.8038C218.422 57.8038 216.316 57.3802 214.401 56.5507C212.486 55.7034 210.936 54.4679 209.752 52.8264L210.605 50.9202V57.0802H202.109V11.207H211.215V29.8634L209.822 28.0101C210.919 26.3333 212.399 25.0272 214.279 24.1094C216.159 23.1916 218.318 22.7327 220.738 22.7327C223.889 22.7327 226.744 23.5093 229.303 25.0802C231.845 26.6334 233.882 28.7338 235.379 31.3813C236.877 34.0289 237.625 36.9941 237.625 40.2771C237.625 43.5247 236.894 46.4723 235.414 49.1375C233.934 51.8027 231.915 53.9208 229.373 55.474C226.814 57.0272 223.906 57.8038 220.686 57.8038ZM219.589 49.4905C221.295 49.4905 222.792 49.1022 224.08 48.3256C225.369 47.549 226.396 46.4547 227.11 45.0603C227.841 43.6659 228.207 42.0598 228.207 40.2594C228.207 38.4591 227.841 36.8706 227.11 35.4938C226.379 34.1171 225.369 33.0405 224.08 32.2285C222.792 31.4343 221.295 31.0283 219.589 31.0283C217.97 31.0283 216.525 31.4166 215.254 32.1932C213.983 32.9699 212.99 34.0642 212.277 35.4585C211.563 36.8529 211.215 38.4591 211.215 40.2594C211.215 42.0598 211.563 43.6659 212.277 45.0603C212.99 46.4547 213.983 47.549 215.254 48.3256C216.525 49.1022 217.97 49.4905 219.589 49.4905Z"
      fill="#2962FF"
    />
    <path
      d="M242.958 20.4381V11.207H252.063V20.4381H242.958ZM242.958 57.0625V23.4563H252.063V57.0625H242.958Z"
      fill="#2962FF"
    />
    <path
      d="M256.06 57.0632V49.6854L275.123 28.3815L276.464 31.4526H256.86V23.457H284.542V30.8349L265.966 52.1917L264.625 49.0676H284.594V57.0632H256.06Z"
      fill="#2962FF"
    />
    <path
      d="M303.926 30.8536V15.0742H305.963V30.8359H303.926V30.8536Z"
      fill="#243E77"
    />
    <path
      d="M50.1416 50.6203C39.9221 60.9811 23.348 60.9811 13.1285 50.6203C2.90899 40.2596 2.90899 23.4565 13.1285 13.0958C18.5603 7.58891 25.7854 5.01196 32.906 5.34732C22.7387 7.43005 15.0784 16.5553 15.0784 27.4985C15.0784 32.2111 16.506 36.5707 18.926 40.189C19.2916 40.7538 19.692 41.301 20.1446 41.8305C20.2317 41.9364 20.3187 42.0247 20.4058 42.1306C24.4797 46.9844 30.5731 50.0732 37.3629 50.0732C40.9319 50.0732 44.292 49.226 47.2864 47.708L50.1416 50.6203Z"
      fill="#2962FF"
    />
    <path
      d="M47.2644 47.7259C44.27 49.2439 40.9099 50.0911 37.3409 50.0911C30.5511 50.0911 24.4577 47.0023 20.3838 42.1484C20.5579 42.3426 20.732 42.5367 20.9235 42.7309C26.8428 48.732 36.4182 48.732 42.3201 42.7309L47.2644 47.7259Z"
      fill="#243E77"
    />
    <path
      d="M50.135 13.0961L42.318 21.0211C36.4161 15.0376 26.8234 15.0376 20.9215 21.0211C15.7856 26.2279 15.124 34.2588 18.9193 40.1893C16.4994 36.571 15.0718 32.2113 15.0718 27.4987C15.0718 16.5732 22.7321 7.44797 32.9168 5.36523C39.1669 5.66529 45.3473 8.24223 50.135 13.0961Z"
      fill="#26C6DA"
    />
    <path
      d="M39.2432 33.1647H29.2675C28.6407 33.1647 28.1184 32.6528 28.1184 31.9997C28.1184 31.3643 28.6233 30.8348 29.2675 30.8348H39.5392C40.3401 30.8348 41.0016 30.1641 41.0016 29.3522C41.0016 29.2463 41.0016 29.158 40.9668 29.0698C40.9494 28.9639 40.9146 28.8403 40.8624 28.7521C40.636 28.2402 40.1311 27.8872 39.5392 27.8872H37.7112C37.0844 27.8872 36.5621 27.3754 36.5621 26.7223C36.5621 26.0692 37.067 25.5574 37.7112 25.5574H37.9027C38.9299 25.5221 38.6165 25.0455 38.425 24.8161C37.3108 23.6864 36.005 22.8922 34.6123 22.398C31.0433 21.1271 26.8997 21.9391 24.0619 24.8337C24.0271 24.869 24.0097 24.8867 23.9923 24.922C23.8182 25.1514 23.6093 25.5574 24.4972 25.5574H28.0662C28.6929 25.5574 29.2152 26.0692 29.2152 26.7223C29.2152 27.3754 28.7103 27.8872 28.0662 27.8872H24.4101C22.8433 27.8872 21.4505 28.9992 21.2068 30.5701C21.0501 31.5585 21.0501 32.5469 21.1719 33.5353C21.3634 35.0179 22.6518 36.1123 24.149 36.1123H32.0878C32.7146 36.1123 33.2369 36.6241 33.2369 37.2772C33.2369 37.9126 32.732 38.4421 32.0878 38.4421H25.4721C23.5222 38.4421 23.8008 39.1305 24.1664 39.5541C25.6288 41.0014 27.4046 41.9016 29.2849 42.2722C29.9813 42.4134 30.4513 43.0488 30.3643 43.7548L29.9813 46.5083C29.8942 47.0907 30.5906 47.4261 30.991 47.0201L36.1443 41.7957L38.4598 39.4482C39.5218 38.3891 40.2878 37.1183 40.7927 35.7945C40.8275 35.7239 40.8624 35.6357 40.8798 35.5474C40.9146 35.4592 40.932 35.3709 40.9494 35.3003C41.3846 33.553 40.0267 33.2176 39.2432 33.1647ZM31.6004 25.575H33.881C34.5078 25.575 35.0301 26.0869 35.0301 26.7399C35.0301 27.393 34.5252 27.9049 33.881 27.9049H31.6004C30.9736 27.9049 30.4513 27.393 30.4513 26.7399C30.4513 26.0869 30.9736 25.575 31.6004 25.575ZM25.4373 33.1647H23.1566C22.5299 33.1647 22.0076 32.6528 22.0076 31.9997C22.0076 31.3643 22.5125 30.8348 23.1566 30.8348H25.4373C26.0641 30.8348 26.5864 31.3467 26.5864 31.9997C26.5864 32.6528 26.0641 33.1647 25.4373 33.1647ZM37.9027 38.4244H35.622C34.9953 38.4244 34.4904 37.9126 34.4904 37.2595C34.4904 36.6241 34.9953 36.0946 35.622 36.0946H37.9027C38.5294 36.0946 39.0517 36.6065 39.0517 37.2595C39.0343 37.9126 38.5294 38.4244 37.9027 38.4244Z"
      fill="#2962FF"
    />
    <path
      d="M296.388 15.0742H293.968L288.397 30.8536H290.591L295.187 17.4394L298.512 27.147H298.529L299.783 30.8536H301.959L296.388 15.0742Z"
      fill="#243E77"
    />
  </svg>
);
/* OtpTimer ===========================================================>>>>> */
type OtpTimerProps = {
  initialSeconds?: number;
  onResend: () => void;
};

export const OtpTimer: React.FC<OtpTimerProps> = ({
  initialSeconds = 60,
  onResend,
}) => {
  const [secondsLeft, setSecondsLeft] = useState(initialSeconds);
  const [isCounting, setIsCounting] = useState(true);

  useEffect(() => {
    let timer: ReturnType<typeof setInterval>;

    if (isCounting && secondsLeft > 0) {
      timer = setInterval(() => {
        setSecondsLeft((prev) => prev - 1);
      }, 1000);
    } else if (secondsLeft === 0) {
      setIsCounting(false);
    }

    return () => clearInterval(timer);
  }, [secondsLeft, isCounting]);

  const handleResend = () => {
    onResend(); // Call parent resend function
    setSecondsLeft(initialSeconds); // Reset timer
    setIsCounting(true); // Restart countdown
  };

  return (
    <div className="text-center">
      {isCounting ? (
        <p className="text-sm text-gray-500">
          Resend OTP in <span className="font-semibold">{secondsLeft}s</span>
        </p>
      ) : (
        <button
          type="button"
          onClick={handleResend}
          className="button-text text-sm text-accent underline hover:no-underline"
        >
          Resend OTP
        </button>
      )}
    </div>
  );
};
/* <<<<<<<<===================================================== OtpTimer */

/* Header ===========================================================>>>>> */

export const Header = () => {
  return (
    <header className="bg-sidebar shadow-md p-8">
      <div className="flex items-center justify-between">
        <div></div>
        <h2 className="text-xl font-semibold">Page Title</h2>
        <div className="bg-gray-200 rounded-full w-8 h-8"></div>
      </div>
    </header>
  );
};

/* <<<<<<<<===================================================== Header */
